rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Allow read/write for all collections during development/testing
    // NOTE: This is less secure but helps during initial development
    // IMPORTANT: Remove or restrict these rules before production
    match /{document=**} {
      allow read, write: if true;
    }

    // More specific rules below (will be used once the app is working)
    // Uncomment these and remove the rule above for production

    /* 
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // User history collection
    match /user_history/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAuthenticated() && isOwner(userId);
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Recommendations collection
    match /recommendations/{recommendationId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        !('userId' in resource.data)
      );
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        !('userId' in resource.data)
      );
    }
    
    // Diet plans collection
    match /diet_plans/{planId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        !('userId' in resource.data)
      );
      allow delete: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || 
        !('userId' in resource.data)
      );
    }
    
    // User data collection (form inputs)
    match /user_data/{dataId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    */
  }
} 